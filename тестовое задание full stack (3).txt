Задание включает 2 части (выполненный тест публикуется на Github):

I. Верстка

Сделать верстку небольшого блока:

https://www.figma.com/file/EfvoY06sONl1LzODKKv1Hy/Finkit-Test

Требования (обязательные):
- верстка на чистом HTML/CSS (без фреймворков, библиотек, систем сборки и т.д.)
- максимальная ширина 1100px с padding-полями 60px с каждой стороны (при большем разрешении выравнивание по центру)
- адаптивная верстка под мобильные устройства (телефон и планшет, также все должно корректно отображаться на переходных разрешениях)
- изображения должны быть оптимизированы, но поддерживать качество retina-экранов
- все иконки подключаются через web-шрифты (можно сделать через сервис fontello)
- именование изображений, классов и прочих css-элементов идет через snake_case
- простой и понятный код

Требования (по желанию):

- добавить интерактивность и анимацию элементов через CSS/JS

II. PHP/JS
sveta | admin
Сделать проект с авторизацией пользователя на PHP, JavaScript и MySQL. На стартовом экране выводим форму (логин/пароль), после успешной авторизации выводим из БД данные с информацией о пользователе (имя, фото, дату рождения) и кнопкой logout.

Требования к функционалу:
- если логин/пароль неправильные - выводим ошибку (асинхронно)
- авторизация происходит без перезагрузки страницы
- после успешного входа выводим анимационный блок (JS, текст об успешной авторизации, через 10 секунд скрываем) и данные о пользователе
- хорошая верстка формы входа и страницы с информацией о пользователе
- адаптивная верстка под мобильные устройства
- одновременная поддержка нескольких сессий пользователя
- защита от брутфорса (подбора пароля)

Требования к коду:
- код на чистом PHP/JS (без фреймворков, библиотек, систем сборки и т.д.)
- компактная архитектура (минимальное количество паттернов, функций-оберток, конструкторов, файлов и папок и т.д.)
- авторизация на основе cookies
- код в snake_case

Требования к БД:
- простая и понятная структура данных
- использование индексов
- не хранить пароли в базе в открытом виде

Требования (опциональные):

После авторизации выводить информацию о пользователе не в виде статичных данных, а динамически подгружать из профиля Instagram.